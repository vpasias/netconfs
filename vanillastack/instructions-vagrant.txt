chmod +x cloudlab-setup-ubuntu-tl.sh && ./cloudlab-setup-ubuntu-tl.sh && \
sudo apt-get install libvirt-bin genisoimage libguestfs-tools libosinfo-bin virtinst qemu-kvm git vim net-tools wget curl bash-completion python-pip libvirt-daemon-system virt-manager bridge-utils libnss-libvirt libvirt-clients osinfo-db-tools intltool sshpass -y && \
sudo sed -i 's/hosts:          files dns/hosts:          files libvirt libvirt_guest dns/' /etc/nsswitch.conf && sudo lsmod | grep kvm && sudo reboot
#sudo systemctl restart libvirtd && sudo systemctl status libvirtd

screen
# Press Return to continue
# detach from session without killing it: Ctrl a d 
# to see screen sessions: screen -ls
# detach from closed session: screen -d -r 2035.pts-0.node0
# enter session: screen -r 2035.pts-0.node0
# exit a session and terminate it: exit

sudo -i

# Create OS node VMs
mkdir -p /mnt/extra/k8s && cd /mnt/extra/k8s

curl -fsSL http://bit.ly/initVagrant | PROVIDER=virtualbox bash
vagrant -v && vboxmanage -V
vboxmanage setproperty machinefolder /mnt/extra/libvirt/ && vboxmanage list systemproperties | grep folder

wget https://raw.githubusercontent.com/vpasias/netconfs/main/k8s-tew/Vagrantfile && wget https://raw.githubusercontent.com/vpasias/netconfs/main/k8s-tew/provision.sh

export IP_PREFIX=192.168.180 && vagrant up

#vagrant status

sudo apt update -y && sudo apt install apt-transport-https ca-certificates curl gnupg2 software-properties-common -y && curl -fsSL https://download.docker.com/linux/debian/gpg | sudo apt-key add - && sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable" -y && sudo apt update -y && apt-cache policy docker-ce && sudo apt install docker-ce -y && sudo usermod -aG docker vpasias
sudo systemctl status docker && docker images && docker ps -a

docker pull harbor.vanillastack.io/vanillastack/installer:latest

docker run \
  --name VanillaStack-installer -d \
  -p 8080:8080 \
  harbor.vanillastack.io/vanillastack/installer:latest

# 8080 -> 192.168.254.101:8080
# URL: http://localhost:8080

# Put the produced VanillaStack into the 'key.pub' file
nano key.pub

vagrant port controller00 && vagrant port controller01 && vagrant port controller02 && vagrant port worker00 && vagrant port worker01 && vagrant port worker02 && \
vagrant port storage00 && vagrant port storage01 && vagrant port storage02

ssh-copy-id -f -i key.pub -o "StrictHostKeyChecking=no" -p 2222 root@127.0.0.1 && ssh-copy-id -f -i key.pub -o "StrictHostKeyChecking=no" -p 2223 root@127.0.0.1 && \
ssh-copy-id -f -i key.pub -o "StrictHostKeyChecking=no" -p 2224 root@127.0.0.1 && ssh-copy-id -f -i key.pub -o "StrictHostKeyChecking=no" -p 2225 root@127.0.0.1 && \
ssh-copy-id -f -i key.pub -o "StrictHostKeyChecking=no" -p 2226 root@127.0.0.1 && ssh-copy-id -f -i key.pub -o "StrictHostKeyChecking=no" -p 2227 root@127.0.0.1 && \
ssh-copy-id -f -i key.pub -o "StrictHostKeyChecking=no" -p 2228 root@127.0.0.1 && ssh-copy-id -f -i key.pub -o "StrictHostKeyChecking=no" -p 2229 root@127.0.0.1 && \
ssh-copy-id -f -i key.pub -o "StrictHostKeyChecking=no" -p 2230 root@127.0.0.1

kubectl get nodes -o wide --all-namespaces && kubectl get pods -o wide --all-namespaces && kubectl get svc -o wide --all-namespaces && kubectl get deployments -o wide --all-namespaces

################################################################################################################################################################################################# Delete #################################################################
######################################################################################################################################################################

vagrant destroy -f && vagrant status && vagrant global-status
