chmod +x cloudlab-setup-ubuntu-tl.sh && ./cloudlab-setup-ubuntu-tl.sh && \
sudo apt-get install libvirt-bin genisoimage libguestfs-tools libosinfo-bin virtinst qemu-kvm git vim net-tools wget curl bash-completion python-pip libvirt-daemon-system virt-manager bridge-utils libnss-libvirt libvirt-clients osinfo-db-tools intltool sshpass -y && \
sudo sed -i 's/hosts:          files dns/hosts:          files libvirt libvirt_guest dns/' /etc/nsswitch.conf && sudo lsmod | grep kvm && sudo reboot
#sudo systemctl restart libvirtd && sudo systemctl status libvirtd

screen
# Press Return to continue
# detach from session without killing it: Ctrl a d 
# to see screen sessions: screen -ls
# detach from closed session: screen -d -r 1887.pts-0.node0
# enter session: screen -r 1887.pts-0.node0
# exit a session and terminate it: exit

sudo -i

# Create OS node VMs
cd /mnt/extra && cat /sys/module/kvm_intel/parameters/nested && cat /proc/cpuinfo | awk '/^processor/{print $3}' | wc -l && free -h && df -hT && sudo virsh list --all && sudo brctl show && \
mkdir -p /mnt/extra/virt/images && mkdir -p /mnt/extra/virt/vms && cd /mnt/extra/virt/images && \
wget -O "/mnt/extra/osinfo-db.tar.xz" https://releases.pagure.org/libosinfo/osinfo-db-20200813.tar.xz && sudo osinfo-db-import --local "/mnt/extra/osinfo-db.tar.xz" && \
cd /mnt/extra/ && git clone https://github.com/giovtorres/kvm-install-vm.git && cd kvm-install-vm

###############################################################################################################################################################################################
################### OpenStack Cluster Installer (OCI)  Installation (https://salsa.debian.org/openstack-team/debian/openstack-cluster-installer) #################### 
###############################################################################################################################################################################################

cd /mnt/extra/kvm-install-vm && nano vm_deployment.sh

#!/bin/bash
#
HOME=/mnt/extra/

cat > /mnt/extra/management.xml <<EOF
<network>
  <name>management</name>
  <forward mode='nat'/>
  <bridge name='virbr101' stp='on' delay='0'/>
  <ip address='192.168.254.1' netmask='255.255.255.0'>
    <dhcp>
      <range start='192.168.254.2' end='192.168.254.50'/>
      <host mac='52:54:00:8a:8b:c1' name='oci' ip='192.168.254.10'/>
    </dhcp>
  </ip>
</network>
EOF

virsh net-define /mnt/extra/management.xml && virsh net-autostart management && virsh net-start management

ip a && sudo virsh net-list --all

sleep 20

#  AIO
./kvm-install-vm create -c 48 -m 196608 -t debian10 -d 1200 -f host-passthrough -k /root/.ssh/id_rsa.pub -l /mnt/extra/virt/images -L /mnt/extra/virt/vms -b virbr101 -T US/Eastern -M 52:54:00:8a:8b:c1 oci

sleep 60

sudo virsh net-list --all && sudo brctl show && sudo virsh list --all

ssh -o "StrictHostKeyChecking=no" debian@oci "sudo ip a"

ssh -o "StrictHostKeyChecking=no" debian@oci 'echo "root:gprm8350" | sudo chpasswd'
ssh -o "StrictHostKeyChecking=no" debian@oci 'echo "debian:kyax7344" | sudo chpasswd'
ssh -o "StrictHostKeyChecking=no" debian@oci "sudo sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/' /etc/ssh/sshd_config"
ssh -o "StrictHostKeyChecking=no" debian@oci "sudo sed -i 's/#PermitRootLogin prohibit-password/PermitRootLogin yes/' /etc/ssh/sshd_config"
ssh -o "StrictHostKeyChecking=no" debian@oci "sudo systemctl restart sshd"
ssh -o "StrictHostKeyChecking=no" debian@oci "sudo rm -rf /root/.ssh/authorized_keys"

ssh -o "StrictHostKeyChecking=no" debian@oci "cat << EOF | sudo tee /etc/modprobe.d/qemu-system-x86.conf
options kvm_intel nested=1
EOF"

ssh -o "StrictHostKeyChecking=no" debian@oci "sudo apt update -y && sudo apt upgrade -y && sudo DEBIAN_FRONTEND=noninteractive apt install vim git gcc-8-base --install-recommends -y"

ssh -o "StrictHostKeyChecking=no" debian@oci "sudo mv /etc/apt/sources.list /etc/apt/old-sources.list"

ssh -o "StrictHostKeyChecking=no" debian@oci "cat << EOF | sudo tee /etc/apt/sources.list
deb http://deb.debian.org/debian/ bullseye main contrib non-free
deb-src http://deb.debian.org/debian/ bullseye-updates main contrib non-free

deb http://security.debian.org/debian-security bullseye-security main
deb-src http://security.debian.org/debian-security bullseye-security main
deb http://ftp.debian.org/debian bullseye-backports main contrib non-free
EOF"

ssh -o "StrictHostKeyChecking=no" debian@oci "sudo apt update"

ssh -o "StrictHostKeyChecking=no" debian@oci "sudo DEBIAN_FRONTEND=noninteractive apt full-upgrade --install-recommends -y"

ssh -o "StrictHostKeyChecking=no" debian@oci "sudo reboot"
#

chmod +x vm_deployment.sh && ./vm_deployment.sh

# Configure nodes
ssh -o "StrictHostKeyChecking=no" debian@oci

cat /sys/module/kvm_intel/parameters/nested && cat /proc/cpuinfo | awk '/^processor/{print $3}' | wc -l && free -h && df -hT && cat /etc/os-release

sudo apt-get update && sudo DEBIAN_FRONTEND=noninteractive apt-get install bridge-utils vim wget curl ipcalc jq lsb-base net-tools openipmi openstack-debian-images openstack-pkg-tools qemu qemu-utils qemu-kvm haproxy --install-recommends -y

# https://packages.debian.org/bullseye/openstack-cluster-installer-poc

sudo DEBIAN_FRONTEND=noninteractive apt-get install openstack-cluster-installer-poc --install-recommends -y

sudo -i
ssh-keygen
cp ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys 

brctl show | more

# GUESTS_DOMAIN_NAME=vipnet.vip / example.com
# OCI_VM_ROOT_PASS=gprm8350
# PRIMARY_DNS=8.8.8.8
# SECONDA_DNS=8.8.4.4
# DEBIAN_SECURITY_MIRROR=http://deb.debian.org/debian-security
# DEBIAN_INCOMING_BUILDD=http://incoming.debian.org/debian-buildd
# DEBIAN_MIRROR_CEPH=http://download.ceph.com/debian-luminous
#sudo sed -i 's/infomaniak.ch/vipnet.vip/' /etc/oci-poc/oci-poc.conf && \
#sudo sed -i 's/a_big_secret/gprm8350/' /etc/oci-poc/oci-poc.conf && sudo sed -i 's/84.16.67.69/8.8.8.8/' /etc/oci-poc/oci-poc.conf && sudo sed -i 's/84.16.67.70/8.8.4.4/' /etc/oci-poc/oci-poc.conf

nano /etc/oci-poc/oci-poc.conf
###################################
### Domain and host information ###
###################################
GUESTS_DOMAIN_NAME=example.com
OCI_VM_HOSTNAME=oci-puppet-master
OCI_VM_FQDN=${OCI_VM_HOSTNAME}.${GUESTS_DOMAIN_NAME}
OCI_VM_ROOT_PASS=gprm8350

#####################################
### Host interfaces configuration ###
#####################################
HOST_MGMT_INTERFACE=eth0

# This network will be used for DHCP / PXE (eth0 of the OpenStack VMs)
HOST_NETWORK_PREFIX=192.168.100

# Management network of your OpenStack (eth1 of the OpenStack VMs)
OPENSTACK_MGMT_NET_PREFIX=192.168.101

# VXLAN inter-compute network (eth2 of the OpenStack VMs)
OPENSTACK_VMNET_PREFIX=192.168.102

# Octavia management
OPENSTACK_OCTAVIA_NET_PREFIX=192.168.104

# Network used to provision the VIP
OPENSTACK_VIP_NET_PREFIX=192.168.103

# This will provision access to 3 cluster networks in the host's
# machine, connected to the eth0 of the VMs.
# Each time, .1 will be added to the host's nic.
CLUSTER_NETWORK_CIDRS="192.168.105.0/24 192.168.106.0/24 192.168.107.0/24 192.168.108.0/24"

# Same as above, but will be added to the bridge
# connected to eth1. These are used as floating IP networks,
# as if they were the provider network.
FLOATING_IP_NETWORK_CIDRS="192.168.105.0/24"

PRIMARY_DNS=8.8.8.8
SECONDA_DNS=8.8.4.4

# CIDR of your VM bridge
HOST_BRIDGE_NET=${HOST_NETWORK_PREFIX}.0/24

# Address for the provisionning VM
OCI_VM_IP=${HOST_NETWORK_PREFIX}.2

# CIDRv6 of your VM bridge
HOST_BRIDGE_NET6=fd5d:12c9:2201:1::1/24

# Host dummynet interface name
HOST_DUMMYNET_IFNAME_PREFIX=ocinic

# MAC address of the nic of the host
HOST_DUMMYNET_MAC_PREFIX=00:22:22:dd:ee

# Name of the bridge that VMs connects to
HOST_BRIDGE_NAME_PREFIX=ocibr

# Prefix for the tap interfaces to connect VMs to
# it will be post-fixed with a number, like ocivm0
GUEST_TAPIF_PREFIX=ocivm

############################################################
### Use virtio-scsi instead of virtio-blk driver.        ###
### Note: virtio-scsi supports FSTRIM/Discard, and names ###
### the drvies as /dev/sdX.                              ###
############################################################
USE_VIRTIO_SCSI=yes

################################
### Use automatic IPMI setup ###
################################
USE_AUTOMATIC_IPMI_SETUP=no

#####################
### Release names ###
#####################
# Name of the OpenStack release for the backport repository
openstack_release=victoria

# Name of the Debian distribution for the backport repository.
# Can be set to sid for development purpose.
debian_release=bullseye

#################################
### Debian mirror definitions ###
#################################
# IP or hostname of your Debian mirror. Usually set to
# an approx IP:port
DEBIAN_MIRROR_HOST=deb.debian.org

# Debian mirror close to you. Hint: use approx or apt-cacher.
DEBIAN_MIRROR=http://${DEBIAN_MIRROR_HOST}/debian

# Debian security mirror close to you. Hint: use approx or apt-cacher.
DEBIAN_SECURITY_MIRROR=http://security.debian.org/debian-security

# Unofficial debian.net Stable backports
DEBIAN_DOT_NET_REPO=http://${debian_release}-${openstack_release}.debian.net/debian

# Incoming buildd address. Normally:
# http://incoming.debian.org/debian-buildd
DEBIAN_INCOMING_BUILDD=http://incoming.debian.org/debian-buildd

# Ceph repository for Stretch, as we need Luminous from upstream
# Normal repo without mirroring is: http://download.ceph.com/debian-luminous
# Mirror list available at: https://ceph.com/get/#ceph-mirrors
DEBIAN_MIRROR_CEPH=http://download.ceph.com/debian-luminous

# Use the above repository?
use_debian_dot_net_backport=yes

# Use the Debian official backports?
use_debian_official_backports=no

# Using pinning to get Ceph from official backports?
pin_ceph_from_stable_backports=yes

# This is useful for development, when you want fast
# update of the package in the Sid Debian repository.
install_buildd_incoming=no

# Useful for building with Stretch
use_upstream_ceph_mirror=no

##############################################
### Non-free add-ons in the Live and nodes ###
##############################################
# If the chassis vendor is Dell, should the Dell iDRAC
# utilities be installed on the target?
target_install_dell_ipmi=no

# Should the Dell iDRAC IPMI utilities be installed on the Live image?
live_image_install_dell_ipmi=no

# Address of the Dell IPMI utilities. At Infomaniak, we
# have a copy of them here:
# http://apt.infomaniak.ch/linux.dell.com/repo/community/debian
dell_ipmi_repo=https://linux.dell.com/repo/community/debian/

# If your vendor is using an LSI card, then you probably
# want to have megacli installed.
target_install_megacli=no

# Should megacli be also installed in the live image?
live_image_install_megacli=no

# Address of the megacli repository. At infomaniak, we use a
# mirror, but you can also use approx like this:
# http://10.4.22.95:9999/hwraid
megacli_repo=http://hwraid.le-vert.net/debian

########################
### Other Options ###
########################
use_radius=no
target_install_hpe=no
live_image_install_hpe=no
target_install_perccli=no
live_image_install_perccli=no

########################
### Slave node range ###
########################
NUMBER_OF_GUESTS=36

# IP address used to bind the IPMI interface of guests.
# Note that these are in fact in the host.
IPMI_BIND_IP_START=192.168.200

# Prefix for the IPMI network interfaces, so that we can simulate
# the VMs to be auto-assigned IPMI IPs.
HOST_DUMMYNET_IPMI_IFNAME_PREFIX=ocifakeipmi

# MAC addresses prefix of the IPMI nic of the host
HOST_DUMMYNET_MAC_PREFIX=00:22:22:ff:00


# Guest HDD size in number of GB
GUEST_HDD_SIZE=10

# This will be used in the DHCP server
# With this file untouch, it's goint to be:
# range 192.168.100.20 192.168.100.250;
GUEST_FIRST_SLAVE_IP=${HOST_NETWORK_PREFIX}.20
GUEST_LAST_SLAVE_IP=${HOST_NETWORK_PREFIX}.250

GUEST_MAC_ADDRESS_PREFIX_ETH0=08:00:27:06:CC:
GUEST_MAC_ADDRESS_PREFIX_ETH1=08:00:27:06:DC:
GUEST_MAC_ADDRESS_PREFIX_ETH2=08:00:27:06:EC:
GUEST_MAC_ADDRESS_PREFIX_ETH3=08:00:27:06:FC:

DEB_IMAGE_FILE=/root/debian-10.3.0-openstack-amd64.qcow2
#

oci-poc-setup

oci-poc-vms stop
oci-poc-vms start
oci-poc-install-cluster-full
ocicli cluster-install cl1

ssh 192.168.100.2

ip a | more
# result: 192.168.122.216

# 8080 -> 192.168.122.216:80
# URL: http://localhost:8080/oci/
# username - password: poc - poc

exit 

ssh root@192.168.100.20

#####################################################################################################################################################################################
###################### GUI & remote desktop configuration ################################################################ 
############################################################################################################################################################################################

ssh -o "StrictHostKeyChecking=no" debian@oci

sudo DEBIAN_FRONTEND=noninteractive apt install task-xfce-desktop xrdp --install-recommends -y && \
sudo systemctl start xrdp && sudo systemctl enable xrdp && sleep 10 && sudo reboot

# 3389 -> 192.168.254.10:3389
# Computer: localhost:3389

###############################################################################################################################################################################################
################################## Delete VM #####################################################################################################################################################
###############################################################################################################################################################################################

cd /mnt/extra/kvm-install-vm && ./kvm-install-vm remove oci && \
virsh net-destroy management && rm -rf /mnt/extra/management.xml && virsh net-undefine management && \
rm -rf /root/.ssh/known_hosts && touch /root/.ssh/known_hosts && sudo virsh list --all && sudo brctl show && sudo virsh net-list --all

#sudo rm -rf /mnt/extra/virt/images/* && ls -lah /mnt/extra/virt/images/
journalctl -u libvirtd
